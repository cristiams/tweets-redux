{"version":3,"sources":["reducers/modalsReducer.js","reducers/validationsReducer.js","reducers/tweetsReducer.js","reducers/index.js","store.js","utils/localStorage.js","actions/modalsActions.js","actions/validationsActions.js","assets/img/redux.png","components/Menu.js","components/Modal.js","components/FormAddTweet.js","actions/tweetsActions.js","components/TweetsList.js","App.js","reportWebVitals.js","index.js"],"names":["initialProps","stateAddTweet","modalReducer","state","action","type","payload","errorFormAddTweet","validationsReducer","tweets","tweetsReducer","filter","tweet","id","combineReducers","modals","modalsReducer","validations","localStorageState","tweetsStorage","localStorage","getItem","JSON","parse","getStateLocalStorage","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","setItem","stringify","openCloseAddTweetModalAction","validationFormAddTweetAction","Menu","dispatch","useDispatch","Navbar","bg","variant","Container","Brand","alt","src","Logo","width","height","className","Button","onClick","openCloseAddTweetModal","ModalView","props","children","isOpenModal","useSelector","Modal","show","onHide","size","centered","FormAddTweet","useState","name","formValue","setFormValue","errorForm","errorFormValue","Form","onChange","e","target","value","onSubmit","preventDefault","uuidv4","date","moment","addTweetAction","closeModal","Group","Control","placeholder","as","row","varian","Alert","TweetList","map","Tweet","Card","Body","Title","Text","deleteTweetAction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9acae5bf.chunk.js","sourcesContent":["const initialProps = {\r\n\r\n  stateAddTweet: false\r\n}\r\n\r\nconst modalReducer = function(state = initialProps, action) {\r\n\r\n  switch (action.type) {\r\n    \r\n    case \"STATE_ADD_TWEET\":\r\n      \r\n      return {\r\n        ...state,\r\n        stateAddTweet: action.payload // payload valor que va a tomar nuevo estado\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default modalReducer;","const initialProps = {\r\n\r\n  errorFormAddTweet: false\r\n}\r\n\r\nconst validationsReducer = function(state = initialProps, action) {\r\n\r\n  switch (action.type) {\r\n    \r\n    case \"VALIDATION_FORM_ADD_TWEET\":\r\n      \r\n      return {\r\n        ...state, // recuperar estado\r\n        errorFormAddTweet: action.payload // payload valor que va a tomar nuevo estado\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default validationsReducer;","const initialProps = {\r\n\r\n  tweets: []\r\n}\r\n\r\nconst tweetsReducer = function(state = initialProps, action) {\r\n\r\n  switch (action.type) {\r\n    \r\n    case \"ADD_TWEET\":\r\n      \r\n      return {\r\n        ...state,\r\n        tweets: [...state.tweets, action.payload] // nos traemos todos los tweest que esten en el estado ...state.tweets y agregamos uno nuevo\r\n      };\r\n\r\n      case \"DELETE_TWEET\":\r\n      \r\n      return {\r\n        ...state,\r\n        tweets: state.tweets.filter(tweet => tweet.id !== action.payload)\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tweetsReducer;","import { combineReducers } from \"redux\";\r\nimport modalsReducer from \"./modalsReducer\";\r\nimport validationsReducer from \"./validationsReducer\";\r\nimport tweetsReducer from \"./tweetsReducer\";\r\n\r\nexport default combineReducers({ // se encarga de combinar todos los reducer\r\n  modals: modalsReducer,\r\n  validations: validationsReducer,\r\n  tweets: tweetsReducer\r\n});","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\nimport { getStateLocalStorage, setStateLocalStorage } from \"./utils/localStorage\";\r\n\r\nconst localStorageState = getStateLocalStorage();\r\n\r\nconst store = createStore(reducer, localStorageState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nstore.subscribe(() => {\r\n\r\n  setStateLocalStorage({\r\n\r\n    tweets: store.getState().tweets\r\n  });\r\n});\r\n\r\nexport default store;","export const getStateLocalStorage = () => {\r\n\r\n  const tweetsStorage = localStorage.getItem(\"tweets\");\r\n\r\n  if (tweetsStorage === null)\r\n    return undefined;\r\n  else\r\n    return JSON.parse(tweetsStorage);\r\n}\r\n\r\nexport const setStateLocalStorage = state => {\r\n\r\n  localStorage.setItem(\"tweets\", JSON.stringify(state));\r\n}","export const openCloseAddTweetModalAction = state => {\r\n  return {\r\n    type: \"STATE_ADD_TWEET\",\r\n    payload: state\r\n  };\r\n};","export const validationFormAddTweetAction = state => {\r\n  return {\r\n    type: \"VALIDATION_FORM_ADD_TWEET\",\r\n    payload: state\r\n  };\r\n};","export default __webpack_public_path__ + \"./static/media/redux.b3b939c6.png\";","// no tiene fichero css por tanto no hacemos carpeta\r\n\r\nimport React from 'react';\r\nimport {Container, Navbar, Button} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\"; // permite ejecutar acciones\r\nimport {openCloseAddTweetModalAction} from \"../actions/modalsActions\";\r\nimport { validationFormAddTweetAction } from \"../actions/validationsActions\";\r\nimport Logo from \"../assets/img/redux.png\";\r\n\r\nexport default function Menu() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const openCloseAddTweetModal = state => dispatch(openCloseAddTweetModalAction(state));\r\n\r\n  const errorForm = state => { dispatch(validationFormAddTweetAction(state))};\r\n\r\n  const openModal = () => {\r\n\r\n    errorForm(false);\r\n    openCloseAddTweetModal(true);\r\n  }\r\n\r\n  return (\r\n\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <img alt=\"Tweets simulator redux\" src={Logo} width=\"30\" height=\"30\" className=\"d-inline-block aling-top mr-4\"/>\r\n          Tweets simulator Redux\r\n        </Navbar.Brand>\r\n        <Button onClick={openModal} variant=\"outline-success\">\r\n          Nuevo Tweet\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}","import React from 'react'\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {openCloseAddTweetModalAction} from \"../actions/modalsActions\"\r\n\r\nexport default function ModalView(props) {\r\n\r\n  const {children} = props;\r\n\r\n // dispathc para ejecutar acciones\r\n\r\n const dispatch = useDispatch();\r\n\r\n const CloseAddTweetModal = state => dispatch(openCloseAddTweetModalAction(state));\r\n\r\n //useSelector para acceder a un valor en el store\r\n\r\n const isOpenModal = useSelector(state => state.modals.stateAddTweet);\r\n\r\n//  console.log(isOpenModal);\r\n\r\n  return (\r\n\r\n    <Modal show={isOpenModal} onHide={() => CloseAddTweetModal(false)} size=\"lg\" centered>\r\n      {children}\r\n    </Modal>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport {Form, Button, Alert} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { validationFormAddTweetAction } from \"../actions/validationsActions\";\r\nimport { addTweetAction } from \"../actions/tweetsActions\";\r\nimport { openCloseAddTweetModalAction } from \"../actions/modalsActions\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function FormAddTweet() {\r\n  const [formValue, setFormValue] = useState({\r\n    name: \"\",\r\n    tweet: \"\"\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const errorForm = state => { dispatch(validationFormAddTweetAction(state))};\r\n\r\n  const errorFormValue = useSelector(state => state.validations.errorFormAddTweet);\r\n\r\n  const addTweet = state => { dispatch(addTweetAction(state))};\r\n\r\n  const closeModal = state => dispatch(openCloseAddTweetModalAction(state));\r\n\r\n  const onChange = e => {\r\n    setFormValue({\r\n      ...formValue, // recupero el valor de mi objeto actual\r\n      [e.target.name]: e.target.value // actualizo lo necesario, lo necesito en corchetes para poder hacer id dinamicos\r\n    });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, tweet } = formValue;\r\n\r\n    if (!name || !tweet) {\r\n      errorForm(true);\r\n      // console.log('error');\r\n    } else {\r\n      errorForm(false);\r\n      addTweet({\r\n        id: uuidv4(),\r\n        name,\r\n        tweet,\r\n        date: moment()\r\n      });\r\n      closeModal(false);\r\n    }\r\n  };\r\n  \r\n  return(\r\n\r\n    <Form className=\"m-3\" onChange={onChange} onSubmit={onSubmit}>\r\n      <Form.Group className=\"text-center\">\r\n        <h1>Nuevo tweet</h1>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Control type=\"text\" name=\"name\" placeholder=\"Escribe tu nombre\" />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Control as=\"textarea\" name=\"tweet\" row=\"3\" placeholder=\"Escribe lo que quieres comunicar...\"\r\n        />\r\n      </Form.Group>\r\n      <Button varian=\"primary\" type=\"submit\">\r\n        Enviar Tweet\r\n      </Button>\r\n      {/* Si errorFormValue es true devuelve alert */}\r\n      {errorFormValue && (\r\n        <Alert variant=\"danger\" className=\"mt-4\">\r\n          Todos los campos son obligatorios\r\n        </Alert>\r\n      )}\r\n    </Form>\r\n  );\r\n}","export const addTweetAction = state => {\r\n  return {\r\n    type: \"ADD_TWEET\",\r\n    payload: state\r\n  };\r\n};\r\n\r\nexport const deleteTweetAction = id => {\r\n  return {\r\n    type: \"DELETE_TWEET\",\r\n    payload: id\r\n  };\r\n};","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteTweetAction } from \"../actions/tweetsActions\";\r\n\r\nexport default function TweetList() {\r\n  const tweets = useSelector(state => state.tweets.tweets);\r\n  return tweets.map(tweet => <Tweet key={tweet.id} tweet={tweet} />);\r\n}\r\n\r\nfunction Tweet(props) {\r\n  const { tweet } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteTweet = id => dispatch(deleteTweetAction(id));\r\n\r\n  return (\r\n    <Card className=\"mb-3 mt-3\">\r\n      <Card.Body>\r\n        <Card.Title>{tweet.name}</Card.Title>\r\n        <Card.Text>{tweet.tweet}</Card.Text>\r\n        <Button variant=\"danger\" onClick={() => deleteTweet(tweet.id)}>\r\n          Eliminar Tweet\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport Menu from \"./components/Menu\";\r\nimport Modal from \"./components/Modal\";\r\nimport FormAddTweet from \"./components/FormAddTweet\";\r\nimport TweetsList from \"./components/TweetsList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Menu/>\r\n      <Container className=\"mt-5\">\r\n        <h1 className=\"text-center\">Tweets</h1>\r\n        <TweetsList/>\r\n      </Container>\r\n      <Modal>\r\n        <FormAddTweet />\r\n      </Modal>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}